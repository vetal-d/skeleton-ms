<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.gpb.dmc</groupId>
    <artifactId>skeleton-ms</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.3</version>
    </parent>

    <properties>
        <!--docker.registry.url>dmc-docker.gpb.ru</docker.registry.url>
        <docker.registry.username>dummy</docker.registry.username>
        <docker.registry.password>dummy</docker.registry.password>
        <helm.registry.url>https://repo.example.com/nexus/dmc-helm</helm.registry.url>
        <helm.registry.username>dummy</helm.registry.username>
        <helm.registry.password>dummy</helm.registry.password-->

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <jib-maven-plugin.version>3.3.0</jib-maven-plugin.version>
        <docker.baseImage>eclipse-temurin:17-jre</docker.baseImage>

        <helm-maven-plugin.version>6.4.0</helm-maven-plugin.version>
        <logstach-encoder.version>7.2</logstach-encoder.version>
        <micrometer.version>1.9.4</micrometer.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstach-encoder.version}</version>
        </dependency>

        <!-- Monitoring -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker image -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scripts>
                        <script><![CDATA[
                        def dockerPackage = project.groupId.replaceAll("\\.", "/")
                        def dockerRegistry = project.properties["docker.registry.url"]
                        if (dockerRegistry) {
                            project.properties.setProperty("docker.image.name", "${dockerRegistry}/${dockerPackage}/${project.artifactId}:${project.version}")
                            project.properties.setProperty("docker.image.registry", dockerRegistry)
                            project.properties.setProperty("docker.image.repository", "${dockerPackage}/${project.artifactId}")
                        } else {
                            project.properties.setProperty("docker.image.name", "${dockerPackage}/${project.artifactId}:${project.version}")
                            project.properties.setProperty("docker.image.registry", "")
                            project.properties.setProperty("docker.image.repository", "${dockerPackage}/${project.artifactId}")
                        }
                        project.properties.setProperty("docker.image.version", project.version)

                        log.info("Calculated image name is " + project.properties['docker.image.name'])
          ]]></script>
                    </scripts>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy</artifactId>
                        <version>3.0.13</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17-jre</image>
                    </from>
                    <to>
                        <image>${docker.image.name}</image>
                        <auth>
                            <username>${docker.registry.username}</username>
                            <password>${docker.registry.password}</password>
                        </auth>
                    </to>
                    <container>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <ports>
                            <port>8080</port>
                            <port>5005</port>
                        </ports>
                        <args>agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</args>
                        <user>1000</user>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Helm chart -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>copy-helm-files</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/helm</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/preprocessed-helm</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.kokuwa.maven</groupId>
                <artifactId>helm-maven-plugin</artifactId>
                <version>${helm-maven-plugin.version}</version>
                <configuration>
                    <chartDirectory>${project.build.directory}/preprocessed-helm</chartDirectory>
                    <chartVersion>${project.version}</chartVersion>
                    <appVersion>${project.version}</appVersion>
                    <useLocalHelmBinary>true</useLocalHelmBinary>
                    <skipTemplate>false</skipTemplate>
                    <addDefaultRepo>false</addDefaultRepo>
                    <addUploadRepos>true</addUploadRepos>
                    <!--helmExtraRepos>
                        <helmRepo>
                            <name>gpb</name>
                            <url>${helm.registry.url}</url>
                            <type>NEXUS</type>
                            <username>${helm.registry.username}</username>
                            <password>${helm.registry.password}</password>
                        </helmRepo>
                    </helmExtraRepos-->
                    <uploadRepoStable>
                        <name>gpb</name>
                        <url>${helm.registry.url}</url>
                        <type>NEXUS</type>
                        <username>${helm.registry.username}</username>
                        <password>${helm.registry.password}</password>
                    </uploadRepoStable>
                    <uploadRepoSnapshot>
                        <name>gpb</name>
                        <url>${helm.registry.url}</url>
                        <type>NEXUS</type>
                        <username>${helm.registry.username}</username>
                        <password>${helm.registry.password}</password>
                    </uploadRepoSnapshot>
                </configuration>
                <executions>
                    <execution>
                        <id>dependency-build</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>dependency-build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>lint</id>
                        <phase>test</phase>
                        <goals>
                            <goal>lint</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>upload</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>
        </plugins>
    </build>
</project>
